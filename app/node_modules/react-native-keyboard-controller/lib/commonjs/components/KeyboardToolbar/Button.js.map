{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_hooks","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ButtonIOS","children","onPress","disabled","accessibilityLabel","accessibilityHint","testID","style","Container","View","TouchableOpacity","accessibilityState","useMemo","createElement","accessibilityRole","ButtonAndroid","rippleRadius","theme","colorScheme","useKeyboardState","state","appearance","ripple","TouchableNativeFeedback","Ripple","background","_default","exports","Platform","select","android"],"sources":["Button.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport { useKeyboardState } from \"../../hooks\";\n\nimport type { KeyboardToolbarTheme } from \"./types\";\nimport type { PropsWithChildren } from \"react\";\nimport type { GestureResponderEvent, ViewStyle } from \"react-native\";\n\ntype ButtonProps = {\n  disabled?: boolean;\n  onPress: (event: GestureResponderEvent) => void;\n  accessibilityLabel: string;\n  accessibilityHint: string;\n  testID: string;\n  rippleRadius?: number;\n  style?: ViewStyle;\n  theme: KeyboardToolbarTheme;\n};\n\nconst ButtonIOS = ({\n  children,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  accessibilityHint,\n  testID,\n  style,\n}: PropsWithChildren<ButtonProps>) => {\n  // immediately switch to plain view to avoid animation flickering\n  // when fade out animation happens and view becomes disabled\n  const Container = disabled\n    ? (View as unknown as typeof TouchableOpacity)\n    : TouchableOpacity;\n  const accessibilityState = useMemo(() => ({ disabled }), [disabled]);\n\n  return (\n    <Container\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"button\"\n      accessibilityState={accessibilityState}\n      style={style}\n      testID={testID}\n      onPress={onPress}\n    >\n      {children}\n    </Container>\n  );\n};\nconst ButtonAndroid = ({\n  children,\n  onPress,\n  disabled,\n  accessibilityLabel,\n  accessibilityHint,\n  testID,\n  rippleRadius = 18,\n  style,\n  theme,\n}: PropsWithChildren<ButtonProps>) => {\n  const colorScheme = useKeyboardState((state) => state.appearance);\n  const accessibilityState = useMemo(() => ({ disabled }), [disabled]);\n  const ripple = useMemo(\n    () =>\n      TouchableNativeFeedback.Ripple(\n        theme[colorScheme].ripple,\n        true,\n        rippleRadius,\n      ),\n    [colorScheme, rippleRadius, theme],\n  );\n\n  return (\n    <TouchableNativeFeedback\n      accessibilityHint={accessibilityHint}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"button\"\n      accessibilityState={accessibilityState}\n      background={ripple}\n      style={style}\n      testID={testID}\n      onPress={onPress}\n    >\n      <View style={style}>{children}</View>\n    </TouchableNativeFeedback>\n  );\n};\n\nexport default Platform.select({\n  android: ButtonAndroid,\n  default: ButtonIOS,\n});\n"],"mappings":"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","ignoreList":[]}